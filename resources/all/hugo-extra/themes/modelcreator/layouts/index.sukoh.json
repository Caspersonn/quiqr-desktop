{{- $collectionPages := slice -}}
{{- $singlePages := slice -}}
{{- $singles := slice -}}
{{- $singlesMenu := slice -}}
{{- $collections := slice -}}
{{- $collectionMenu := slice -}}
{{- $homeMenu := slice -}}
{{- $dataMenu := slice -}}
{{- $pogoMenu := slice -}}
{{- $generalMenu := slice -}}
{{- $configItems := dict "title" "string" "description" "string" -}}
{{- $translations := slice -}}

{{- range .Site.Languages -}}
      {{- if not ( in $translations .Lang ) -}}
        {{- $translations = $translations | append .Lang -}}
      {{- end -}}
{{- end -}}

{{/*------------------------------ Data -----------------------------*/}}

{{- range $index, $file := readDir "/" -}}
  {{- if eq $file.Name "data" -}}
      {{- $data := (partial "createDataItems" (dict "dir" "/data/" "data" $.Site.Data "translations" $translations "params" $.Site.Params)) -}}
      {{- $singles = $singles | append (index $data "singles") -}}
      {{- $collections = $collections | append (index $data "collections") -}}
      {{- $dataMenu = $dataMenu | append (index $data "menu") -}}
  {{- end -}}
{{- end -}}

{{/*------------------------------ Menus and Params  -----------------------------*/}}

{{- $configFilePath := partial "configFile" . -}}
{{- $configParams := dict -}}
{{ range $key, $value := $.Site.Params }}
    {{- if not (or (eq $key "mainsections") (eq $key "mainSections") ) -}}
        {{ $configParams = $configParams | merge (dict $key $value) -}}
    {{- end -}}
{{ end }}

{{- if in $configFilePath "config/_default/" }}
      {{- range $index, $file := partial "rangeFiles"  (dict "dir" "config/_default/" ) -}}
            {{- if or (in .file "params") (in .file "Params") -}}
                {{- $single := partial "createParams" (dict "file" .file  "dir" "config/_default/" "params" $.Site.Params) -}}
                {{- $singles = $singles | append $single -}}
                {{- $generalMenu = $generalMenu | append (dict "key" ( index $single "key" ) ) -}}
            {{- else if or (in .file "menu") (in .file "Menu") -}}
                {{- $single := partial "createMenus" (dict "file" .file  "dir" "config/_default/" "menus" $.Site.Menus "key" "menus") -}}
                {{- $singles = $singles | append $single -}}
                {{- $generalMenu = $generalMenu | append (dict "key" ( index $single "key" ) ) -}}
            {{- end -}}
      {{- end -}}
{{- else -}}
      {{ $config := readFile $configFilePath  }}
      {{- if in $config "params" -}}
          {{- $single := partial "createParams" (dict "file" $configFilePath  "dir" "/" "params" $configParams "configItems" $configItems "paramsKey" "params") -}}
          {{- $singles = $singles | append $single -}}
          {{- $generalMenu = $generalMenu | append (dict "key" ( index $single "key" ) ) -}}
      {{- else if in $config "Params" -}}
          {{- $single := partial "createParams" (dict "file" $configFilePath  "dir" "/" "params" $configParams "configItems" $configItems "paramsKey" "Params") -}}
          {{- $singles = $singles | append $single -}}
          {{- $generalMenu = $generalMenu | append (dict "key" ( index $single "key" ) ) -}}
      {{- end -}}

      {{- if in $config "menu" -}}
          {{- $single := partial "createMenus" (dict "file" $configFilePath  "dir" "/" "menus" $.Site.Menus "key" "menus" ) -}}
          {{- $singles = $singles | append $single -}}
          {{- $generalMenu = $generalMenu | append (dict "key" ( index $single "key" ) ) -}}
      {{- end -}}
{{- end -}}

{{/*------------------------Static Image bundle manager --------------*/}}


{{- range where (readDir "/") ".Name" "static" -}}
  {{- range where (readDir "static/") ".Name" "in" (slice "images" "img") -}}
    {{- $imagesInRoot := false -}}
    {{- $imagesInSubFolder := false -}}

    {{- $imageDir := printf "static/%s" .Name -}}
    {{- range (readDir $imageDir) -}}
        {{- $ext := path.Ext .Name }}
        {{- if and (not .IsDir) (in (slice ".jpg" ".jpeg" ".png" ".gif" "webp") $ext) -}}
            {{- $imagesInRoot = true -}}

        {{- else if .IsDir -}}
            {{- $imagesInSubFolder = true -}}
        {{- end -}}
    {{- end -}}

    {{- if $imagesInRoot -}}
        {{- $key := "img_static" -}}
        {{- $singles = $singles | append (partial "staticBundleManager" ( dict "dir" "static" "title" "General images" "key" $key "file" "static/.pogo-images.md" )) -}}
        {{- $generalMenu = $generalMenu | append (dict "key" $key ) -}}
    {{- end -}}

    {{- if $imagesInSubFolder -}}
        {{ $key := "img_static_image"}}
        {{- $singles = $singles | append (partial "staticBundleManager" ( dict "dir" $imageDir "title" "Grouped images" "key" $key "file" (printf "%s/.pogo-images.md" $imageDir))) -}}
        {{- $generalMenu = $generalMenu | append (dict "key" $key ) -}}
    {{- end -}}
  {{- end -}}
{{- end -}}

{{/*------------------------ Home widgetpage ------------------------ */}}

{{- $homeSinglePages := slice -}}
{{- $homeCollections := slice -}}
{{- $page := "/home/index.md" -}}

{{- $homepage := site.GetPage $page -}}

{{- $homepages := slice $homepage -}}
{{- if $homepage.IsTranslated -}}
    {{- $homepages = $homepage.AllTranslations }}
{{- end -}}
{{- range $homepages -}}
    {{- $currentHomepage := . -}}
    {{- range $index, $st :=  (.Resources.ByType "page") -}}
      {{- $contentDir := (partial "getContentDir" . ) -}}
      {{- $parentDir := (path.Dir (path.Dir $st.File.Dir)) -}}
      {{- $language := "" -}}
      {{- if $homepage.IsTranslated -}}
          {{- $language = $currentHomepage.Language.Lang -}}
      {{- end -}}
      {{- if or (eq $st.File.Dir "home/") (eq $parentDir "home") -}}
          {{- $homeSinglePages = $homeSinglePages | append . -}}
      {{ else }}
        {{- $path :=  path.Dir (path.Dir $st.File.Dir) -}}
        {{- if not (in $homeCollections (printf "%s%s" $language $path)) -}}
            {{- $homeCollections = $homeCollections | append (printf "%s%s" $language $path) -}}
            {{- $sectionKey := printf "%s_%s" (path.Base $path) $language -}}
            {{- if $language -}} {{ $language = (printf "%s | " $language) }} {{- end -}}
            {{- $sectionTitle :=  printf "%s%s" $language ((path.Base $path)| humanize) -}}
            {{- $itemTitle :=   $sectionTitle  | singularize -}}
            {{- $dir := printf "%s%s/" $contentDir $parentDir -}}
            {{- $extension := .File.Ext -}}
            {{- $fields := slice -}}
            {{- $resourceDir := "" -}}
            {{- $filePath := "" -}}
            {{- with $st.File -}} {{- $filePath = .Path -}} {{- end -}}
            {{- if (index (readDir $dir) 0).IsDir -}}
                {{- $resourceDir = printf "%s%s" $dir (index (readDir $dir) 0).Name -}}
            {{- else -}}
                {{- $resourceDir = printf "%s%s" $dir (index (readDir $dir) 1).Name -}}
            {{- end -}}
            {{- $fields = $fields | append (partial "createResourceBundleManagers" (dict "page" $st.Parent "dir" $resourceDir)) -}}
            {{- $fields := $fields | append (partial "createField" (dict "value" .Content "key" "mainContent" )) -}}
            {{- range $key, $value := .Params -}}
                {{- $field := partial "createField" (dict "value" $value "key" $key "file" $filePath "params" $.Site.Params ) -}}
                {{- $fields = $fields | append $field -}}
            {{- end -}}
            {{- $fields = partial "sortFields" $fields -}}
            {{- $collection := dict "key" $sectionKey "title" $sectionTitle "folder" $dir "extension" $extension "dataformat" "yaml" "fields" $fields "itemtitle" $itemTitle "previewUrl" "/" -}}
            {{- $collections = $collections | append $collection -}}
            {{- $homeMenu = $homeMenu | append (dict "key" (index $collection "key")) -}}
        {{- end -}}
      {{- end -}}
    {{- end -}}
{{- end -}}


{{- range $homeSinglePages -}}
      {{- $language := "" -}}
      {{- if and .Language.Lang  $homepage.IsTranslated -}}
          {{- $language = .Language.Lang -}}
      {{- end -}}
      {{- $single := (partial "createSingle" (dict "page" . "prefix" "h_" "language" $language "params" $.Site.Params )) -}}
      {{- $singles = $singles | append $single -}}
      {{- $homeMenu = $homeMenu | append (dict "key" $single.key ) -}}
{{- end -}}

{{/*------------------------Collections------------------------ */}}


{{- range where .Site.AllPages "Kind" "in" (slice "section" "taxonomy" ) -}}
    {{- $collectionPages = $collectionPages | append . -}}
{{- end -}}

{{- $additionalCollections := slice -}}
{{- range .Site.AllPages -}}
    {{ with .Parent }}
        {{- if and (eq .Kind "section") (not (in $collectionPages . )) (not (in $additionalCollections .Path )) -}}
            {{- $additionalCollections = $additionalCollections | append .Path -}}
            {{- $collectionPages = $collectionPages | append . -}}
        {{- end -}}
    {{ end }}
{{- end -}}

{{- range $collectionPages -}}
      {{- $collection := (partial "createCollection" (dict "page" . "params" $.Site.Params )) -}}
      {{- if gt (len $collection) 0 }}
          {{- $collectionMenu = $collectionMenu | append (dict "key" (index $collection "key")) -}}
          {{- $collections = $collections | append $collection -}}
      {{- end -}}
{{- end -}}


{{/*---------------------------Singles----------------------------- */}}

{{- range .Site.Pages -}}
    {{- if and .IsHome .Path -}}
      {{- $singlePages = $singlePages | append . -}}
    {{- end -}}
{{- end -}}

{{- range .Pages -}}
  {{- if .File -}}
    {{- if .IsTranslated -}}
        {{- range .AllTranslations -}}
            {{- if not (eq .Language.Lang "" ) -}}
                  {{- $singlePages = $singlePages | append . -}}
            {{- end -}}
        {{- end -}}
    {{- else -}}
          {{- $singlePages = $singlePages | append . -}}
    {{- end -}}
  {{- end -}}
{{- end -}}

{{- range $singlePages -}}
    {{- $single := (partial "createSingle" (dict "page" . "prefix" "s_" "params" $.Site.Params) ) -}}
    {{ if gt (len $single) 0 }}
        {{- if ne $single.file "" -}}
          {{- $singles = $singles | append $single -}}
          {{- $singlesMenu = $singlesMenu | append (dict "key" $single.key ) -}}
        {{- end -}}
    {{- end -}}
{{- end -}}

{{/*--------------------pogoMenu items --------------------*/}}

{{- $pogoCMS := dict -}}
{{- $pogoFORM := dict -}}
{{- range $index, $file := readDir "/" -}}
  {{- if eq $file.Name "zpogomenu.json" -}}
      {{- $pogoCMS = getJSON "/zpogomenu.json" -}}
      {{- if $pogoCMS.menu -}}
          {{- $singles = $singles | append (partial "createPogoMenuSingle" (dict "item" $pogoCMS "key" "pogocms" "file" "/zpogomenu.json" "title" "CMS" "dataformat" "json")) -}}
          {{- $pogoMenu = $pogoMenu | append (dict "key" "pogocms") -}}
      {{- end -}}
  {{- end -}}
  {{- if eq $file.Name "poppygo" -}}
    {{- range $index, $file := readDir "poppygo/"}}
        {{- if eq $file.Name "forms" -}}
            {{- range $index, $file := readDir "poppygo/forms/" -}}
                {{- if eq $file.Name "default.json" -}}
                    {{- $pogoFORM = getJSON "poppygo/forms/default.json" -}}
                    {{- $collections = $collections | append (partial "createPogoMenuCollection" (dict "item" $pogoFORM "key" "pogoform" "dir" "/poppygo/forms/" "title" "Form" "ext" "json" "dataformat" "json" "itemTitle" "Form")) -}}
                    {{- $pogoMenu = $pogoMenu | append (dict "key" "pogoform") -}}
                {{- end -}}
            {{- end -}}
        {{- end -}}
    {{- end -}}
  {{- end -}}
{{- end -}}


{{/*---------------------------Menu based----------------------------- */}}
{{- $sukohMenu := slice -}}

{{- if gt (len $homeMenu) 0 }}
      {{- $sortedHomeMenu := sort $homeMenu "value" "desc" -}}
      {{- $sukohMenu = $sukohMenu | append (dict "key" "home" "title" "Home" "menuItems" $sortedHomeMenu) -}}
{{- end -}}

{{- if gt (len $singlesMenu) 0 }}
    {{- $sortedSinglesMenu := sort $singlesMenu "key" "asc" -}}
    {{- $sukohMenu = $sukohMenu | append (dict "key" "singles" "title" "Pages" "menuItems" $sortedSinglesMenu) -}}
{{- end -}}

{{- if gt (len $collectionMenu) 0 }}
    {{- $sortedCollectionMenu := sort $collectionMenu "key" "asc" -}}
    {{- $sukohMenu = $sukohMenu | append (dict "key" "collections" "title" "Groups" "menuItems" $sortedCollectionMenu) -}}
{{- end -}}

{{- if gt (len $dataMenu) 0 }}
    {{- $sortedDataMenu := sort $dataMenu "key" "asc" -}}
    {{- $sukohMenu = $sukohMenu | append (dict "key" "data" "title" "Other content" "menuItems" $sortedDataMenu) -}}
{{- end -}}

{{- if gt (len $generalMenu) 0 }}
    {{- $sukohMenu = $sukohMenu | append (dict "key" "general" "title" "General" "menuItems" $generalMenu) -}}
{{- end -}}

{{- if gt (len $pogoMenu) 0 }}
    {{- $sukohMenu = $sukohMenu | append (dict "key" "poppygo" "title" "PoppyGo" "menuItems" $pogoMenu) -}}
{{- end -}}

{{/* -------------------- Determine final Menu based on $pogoCMS customised ------------*/}}

{{- $menu := slice -}}
{{- $pogoKeys := slice -}}

{{- range $pogoCMS.menu -}}
    {{ $pogoKeys = $pogoKeys | append .key -}}
{{- end -}}

{{- if $pogoCMS.menu -}}
    {{- range where $pogoCMS.menu "visible" "eq" true -}}
        {{- $itemKeys := slice -}}
        {{- $items := slice -}}
        {{- range .menuItems -}}
          {{ $itemKeys = $itemKeys | append .key -}}
        {{- end -}}

        {{- range where .menuItems "visible" "eq" true -}}
          {{- $items = $items | append (dict "key" .key ) -}}
        {{- end -}}

        {{- range where $sukohMenu "key" "eq" .key -}}
          {{- range .menuItems -}}
            {{- if not (in $itemKeys .key) -}}
                {{- $items = $items | append (dict "key" .key )}}
            {{- end -}}
          {{- end -}}
        {{- end -}}

        {{- $menu = $menu | append (dict "key" .key "title" .title "menuItems" $items) -}}
    {{- end -}}
{{- end -}}

{{- range $sukohMenu -}}
  {{ if not (in $pogoKeys .key) -}}
    {{- $menu = $menu | append (dict "key" .key "title" .title "menuItems" .menuItems ) -}}
  {{- end -}}
{{- end -}}

{{/*-----------------The core getting it all together------------- */}}


{{- $hugover := printf "extended_%s" hugo.Version -}}
{{- $serve := slice (dict "key" "default" "config" (partial "configFile" .)) -}}
{{- $build := slice (dict "key" "default" "config" (partial "configFile" .)) -}}
{{- dict "hugover" $hugover "serve" $serve "build" $build "menu" $menu "singles" $singles "collections" $collections  | jsonify (dict "prefix" " " "indent" "  ") -}}
