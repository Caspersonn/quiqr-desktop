name: Build/release

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
    tags:
      - '*'

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        #os: [macos-latest, ubuntu-latest, windows-latest]
        #os: [ubuntu-latest, windows-latest]
        os: [macos-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 14

      # Import Apple API key for app notarization on macOS
      - name: Prepare for app notarization (macOS)
        if: startsWith(matrix.os, 'macos')
        run: |
          mkdir -p ~/private_keys/
          echo '${{ secrets.API_KEY }}' > ~/private_keys/AuthKey_${{ secrets.API_KEY_ID }}.p8

#      - name: Setup tmate session
#        uses: mxschmitt/action-tmate@v3

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:

          # macOS Code Signing
          mac_certs: ${{ secrets.MAC_CERTS }}
          mac_certs_password: ${{ secrets.MAC_CERTS_PASSWORD }}

          github_token: ${{ secrets.GITHUB_TOKEN }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}

        env:
          GH_PRIV_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          USE_HARD_LINKS: false
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

          # macOS notarization API key
          API_KEY_ID: ${{ secrets.API_KEY_ID }}
          API_KEY_ISSUER_ID: ${{ secrets.API_KEY_ISSUER_ID }}

      - name: Install Snapcraft
        uses: samuelmeuli/action-snapcraft@v1
        if: startsWith(matrix.os, 'ubuntu')
        with:
          snapcraft_token: ${{ secrets.SNAPCRAFT_TOKEN }}
